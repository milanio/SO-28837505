//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34014
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WpfClient.ServiceReference1 {
    using System.Runtime.Serialization;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SchedulerStatus", Namespace="http://schemas.datacontract.org/2004/07/CApp")]
    public enum SchedulerStatus : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Stopped = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Running = 1,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.ISchedulerService", CallbackContract=typeof(WpfClient.ServiceReference1.ISchedulerServiceCallback))]
    public interface ISchedulerService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISchedulerService/Stop", ReplyAction="http://tempuri.org/ISchedulerService/StopResponse")]
        void Stop();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISchedulerService/Stop", ReplyAction="http://tempuri.org/ISchedulerService/StopResponse")]
        System.Threading.Tasks.Task StopAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISchedulerService/SubscribeStatusUpdate", ReplyAction="http://tempuri.org/ISchedulerService/SubscribeStatusUpdateResponse")]
        void SubscribeStatusUpdate();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISchedulerService/SubscribeStatusUpdate", ReplyAction="http://tempuri.org/ISchedulerService/SubscribeStatusUpdateResponse")]
        System.Threading.Tasks.Task SubscribeStatusUpdateAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ISchedulerServiceCallback {
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/ISchedulerService/StatusUpdate")]
        void StatusUpdate(WpfClient.ServiceReference1.SchedulerStatus status);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ISchedulerServiceChannel : WpfClient.ServiceReference1.ISchedulerService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SchedulerServiceClient : System.ServiceModel.DuplexClientBase<WpfClient.ServiceReference1.ISchedulerService>, WpfClient.ServiceReference1.ISchedulerService {
        
        public SchedulerServiceClient(System.ServiceModel.InstanceContext callbackInstance) : 
                base(callbackInstance) {
        }
        
        public SchedulerServiceClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName) : 
                base(callbackInstance, endpointConfigurationName) {
        }
        
        public SchedulerServiceClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, string remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public SchedulerServiceClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public SchedulerServiceClient(System.ServiceModel.InstanceContext callbackInstance, System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, binding, remoteAddress) {
        }
        
        public void Stop() {
            base.Channel.Stop();
        }
        
        public System.Threading.Tasks.Task StopAsync() {
            return base.Channel.StopAsync();
        }
        
        public void SubscribeStatusUpdate() {
            base.Channel.SubscribeStatusUpdate();
        }
        
        public System.Threading.Tasks.Task SubscribeStatusUpdateAsync() {
            return base.Channel.SubscribeStatusUpdateAsync();
        }
    }
}
